package com.vz.cassandraTool.pojo;
// Generated Nov 12, 2019 12:28:09 PM by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ErrorLog generated by hbm2java
 */
@Entity
@Table(name = "error_log", catalog = "cassandra_automation1")
public class ErrorLog implements java.io.Serializable {

	private Integer errorCode;
	private String errorName;
	private String type;
	private Set<JobRun> jobRuns = new HashSet<JobRun>(0);
	private Set<FileProcess> fileProcesses = new HashSet<FileProcess>(0);

	public ErrorLog() {
	}

	

	public ErrorLog(Integer errorCode, String errorName, String type, Set<JobRun> jobRuns,
			Set<FileProcess> fileProcesses) {
		this.errorCode = errorCode;
		this.errorName = errorName;
		this.type = type;
		this.jobRuns = jobRuns;
		this.fileProcesses = fileProcesses;
	}

	@Id
    @GeneratedValue
	@Column(name = "errorCode", unique = true, nullable = false, length = 45)
	
	public Integer getErrorCode() {
		return errorCode;
	}



	public void setErrorCode(Integer errorCode) {
		this.errorCode = errorCode;
	}
	@Column(name = "errorName", length = 45)
	public String getErrorName() {
		return this.errorName;
	}





	public void setErrorName(String errorName) {
		this.errorName = errorName;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "errorLog")
	public Set<JobRun> getJobRuns() {
		return this.jobRuns;
	}

	public void setJobRuns(Set<JobRun> jobRuns) {
		this.jobRuns = jobRuns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "errorLog")
	public Set<FileProcess> getFileProcesses() {
		return this.fileProcesses;
	}

	public void setFileProcesses(Set<FileProcess> fileProcesses) {
		this.fileProcesses = fileProcesses;
	}

}
