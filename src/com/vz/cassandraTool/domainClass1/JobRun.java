package com.vz.cassandraTool.domainClass1;
// Generated Nov 12, 2019 10:33:12 AM by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * JobRun generated by hbm2java
 */
@Entity
@Table(name = "job_run", catalog = "cassandra_automation1")
public class JobRun implements java.io.Serializable {

	private int jobRunId;
	private CassandraTable cassandraTable;
	private ErrorLog errorLog;
	private SourceTable sourceTable;
	private System system;
	private String environmentName;
	private String instance;
	private String frequency;
	private String feedFileName;
	private Byte isRecon;
	private String status;
	private Set<FileProcess> fileProcesses = new HashSet<FileProcess>(0);

	public JobRun() {
	}

	public JobRun(int jobRunId, CassandraTable cassandraTable, SourceTable sourceTable, System system) {
		this.jobRunId = jobRunId;
		this.cassandraTable = cassandraTable;
		this.sourceTable = sourceTable;
		this.system = system;
	}

	public JobRun(int jobRunId, CassandraTable cassandraTable, ErrorLog errorLog, SourceTable sourceTable,
			System system, String environmentName, String instance, String frequency, String feedFileName, Byte isRecon,
			String status, Set<FileProcess> fileProcesses) {
		this.jobRunId = jobRunId;
		this.cassandraTable = cassandraTable;
		this.errorLog = errorLog;
		this.sourceTable = sourceTable;
		this.system = system;
		this.environmentName = environmentName;
		this.instance = instance;
		this.frequency = frequency;
		this.feedFileName = feedFileName;
		this.isRecon = isRecon;
		this.status = status;
		this.fileProcesses = fileProcesses;
	}

	@Id

	@Column(name = "jobRunId", unique = true, nullable = false)
	public int getJobRunId() {
		return this.jobRunId;
	}

	public void setJobRunId(int jobRunId) {
		this.jobRunId = jobRunId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cassandraId", nullable = false)
	public CassandraTable getCassandraTable() {
		return this.cassandraTable;
	}

	public void setCassandraTable(CassandraTable cassandraTable) {
		this.cassandraTable = cassandraTable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "erroCode")
	public ErrorLog getErrorLog() {
		return this.errorLog;
	}

	public void setErrorLog(ErrorLog errorLog) {
		this.errorLog = errorLog;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sourceId", nullable = false)
	public SourceTable getSourceTable() {
		return this.sourceTable;
	}

	public void setSourceTable(SourceTable sourceTable) {
		this.sourceTable = sourceTable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "systemId", nullable = false)
	public System getSystem() {
		return this.system;
	}

	public void setSystem(System system) {
		this.system = system;
	}

	@Column(name = "environmentName", length = 45)
	public String getEnvironmentName() {
		return this.environmentName;
	}

	public void setEnvironmentName(String environmentName) {
		this.environmentName = environmentName;
	}

	@Column(name = "instance", length = 45)
	public String getInstance() {
		return this.instance;
	}

	public void setInstance(String instance) {
		this.instance = instance;
	}

	@Column(name = "frequency", length = 45)
	public String getFrequency() {
		return this.frequency;
	}

	public void setFrequency(String frequency) {
		this.frequency = frequency;
	}

	@Column(name = "feedFileName", length = 45)
	public String getFeedFileName() {
		return this.feedFileName;
	}

	public void setFeedFileName(String feedFileName) {
		this.feedFileName = feedFileName;
	}

	@Column(name = "isRecon")
	public Byte getIsRecon() {
		return this.isRecon;
	}

	public void setIsRecon(Byte isRecon) {
		this.isRecon = isRecon;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobRun")
	public Set<FileProcess> getFileProcesses() {
		return this.fileProcesses;
	}

	public void setFileProcesses(Set<FileProcess> fileProcesses) {
		this.fileProcesses = fileProcesses;
	}

}
