package com.vz.cassandraTool.domainClass1;
// Generated Nov 12, 2019 10:33:12 AM by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Jobs generated by hbm2java
 */
@Entity
@Table(name = "jobs", catalog = "cassandra_automation1")
public class Jobs implements java.io.Serializable {

	private Integer jobid;
	private SourceTable sourceTable;
	private String jobName;
	private Byte isRecon;
	private Set<SourceTable> sourceTables = new HashSet<SourceTable>(0);

	public Jobs() {
	}

	public Jobs(SourceTable sourceTable) {
		this.sourceTable = sourceTable;
	}

	public Jobs(SourceTable sourceTable, String jobName, Byte isRecon, Set<SourceTable> sourceTables) {
		this.sourceTable = sourceTable;
		this.jobName = jobName;
		this.isRecon = isRecon;
		this.sourceTables = sourceTables;
	}

	@GenericGenerator(name = "com.vz.cassandraTool.domainClass1.JobsIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "sourceTable"))
	@Id
	@GeneratedValue(generator = "com.vz.cassandraTool.domainClass1.JobsIdGenerator")

	@Column(name = "jobid", unique = true, nullable = false)
	public Integer getJobid() {
		return this.jobid;
	}

	public void setJobid(Integer jobid) {
		this.jobid = jobid;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public SourceTable getSourceTable() {
		return this.sourceTable;
	}

	public void setSourceTable(SourceTable sourceTable) {
		this.sourceTable = sourceTable;
	}

	@Column(name = "jobName", length = 45)
	public String getJobName() {
		return this.jobName;
	}

	public void setJobName(String jobName) {
		this.jobName = jobName;
	}

	@Column(name = "isRecon")
	public Byte getIsRecon() {
		return this.isRecon;
	}

	public void setIsRecon(Byte isRecon) {
		this.isRecon = isRecon;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "jobs")
	public Set<SourceTable> getSourceTables() {
		return this.sourceTables;
	}

	public void setSourceTables(Set<SourceTable> sourceTables) {
		this.sourceTables = sourceTables;
	}

}
